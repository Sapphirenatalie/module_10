# Очереди для обмена данными между потоками
# Моделирование работы сети кафе с несколькими столиками и потоком посетителей,
# прибывающих для заказа пищи и уходящих после завершения приема.
# Создайте 3 класса:
# Table - класс для столов, который будет содержать следующие атрибуты:
# number(int) - номер стола, is_busy(bool) - занят стол или нет.
# Cafe - класс для симуляции процессов в кафе. Должен содержать следующие атрибуты и методы:
# Атрибуты queue - очередь посетителей (создаётся внутри init), tables список столов (поступает из вне).
# Метод customer_arrival(self) - моделирует приход посетителя(каждую секунду).
# Метод serve_customer(self, customer) - моделирует обслуживание посетителя.
# Проверяет наличие свободных столов, в случае наличия стола - начинает обслуживание посетителя (запуск потока),
# в противном случае - посетитель поступает в очередь. Время обслуживания 5 секунд.
# Customer - класс (поток) посетителя. Запускается, если есть свободные столы.
# Так же должны выводиться текстовые сообщения соответствующие событиям:
# Посетитель номер <номер посетителя> прибыл.
# Посетитель номер <номер посетителя> сел за стол <номер стола>. (начало обслуживания)
# Посетитель номер <номер посетителя> покушал и ушёл. (конец обслуживания)
# Посетитель номер <номер посетителя> ожидает свободный стол. (помещение в очередь)

import threading
from threading import Thread
import sys
from queue import Queue
from time import sleep, strftime
from colorama import Fore


class Table:
    count_tables = 0

    def __init__(self, number: int):
        Table.count_tables += 1
        self.number = number
        self.is_busy = False


class Customer(Thread):
    def __init__(self, number, cafe):
        super().__init__()
        self.number = number
        self.cafe = cafe

    def run(self):
        self.cafe.serve_customer(self)


class Cafe:
    customers_max = 20

    def __init__(self, tables):
        self.queue = Queue()
        self.tables = tables
        self.customer_count = 0

        initialization = (f'{strftime("%M:%S")} Инициализация симуляции кафе. '
                          f'Вместимость кафе: {Cafe.customers_max} человек. '
                          f'Столиков в кафе: {Table.count_tables}\n')
        for letter in initialization:
            sys.stdout.write(letter)
            sys.stdout.flush()
            sleep(0.03)

    def customer_arrival(self):
        for customer_number in range(1, 21):
            sleep(1)
            print(f'{Fore.WHITE}{strftime("%M:%S")} {Fore.LIGHTRED_EX}Посетитель '
                  f'номер {customer_number} прибыл.', sep='\n')
            customer = Customer(customer_number, self)
            customer.start()

    def serve_customer(self, customer):
        for table in self.tables:
            if not table.is_busy:
                table.is_busy = True
                print(f'      {Fore.WHITE}{strftime("%M:%S")} {Fore.LIGHTBLUE_EX}Посетитель '
                      f'номер {customer.number} сел за стол {table.number}.', sep='\n')
                sleep(5)
                print(f'            {Fore.WHITE}{strftime("%M:%S")} {Fore.LIGHTGREEN_EX}Посетитель '
                      f'номер {customer.number} покушал и ушел.', sep='\n')
                table.is_busy = False
                if not self.queue.empty():
                    next_customer = self.queue.get()
                    self.serve_customer(next_customer)
                return
        print(f'      {Fore.WHITE}{strftime("%M:%S")} {Fore.LIGHTCYAN_EX}Посетитель '
              f'номер {customer.number} ожидает свободный стол.', sep=' \n')
        self.queue.put(customer)


# Пример работы:
# Создаем столики в кафе
table1 = Table(1)
table2 = Table(2)
table3 = Table(3)
tables = [table1, table2, table3]

# Инициализируем кафе
cafe = Cafe(tables)

# Запускаем поток для прибытия посетителей
customer_arrival_thread = threading.Thread(target=cafe.customer_arrival)
customer_arrival_thread.start()

# Ожидаем завершения работы прибытия посетителей
customer_arrival_thread.join()


# Вывод на консоль
# 56:15 Инициализация симуляции кафе. Вместимость кафе: 20 человек. Столиков в кафе: 3
# 56:18 Посетитель номер 1 прибыл.
#       56:18 Посетитель номер 1 сел за стол 1.
# 56:19 Посетитель номер 2 прибыл.
#       56:19 Посетитель номер 2 сел за стол 2.
# 56:20 Посетитель номер 3 прибыл.
#       56:20 Посетитель номер 3 сел за стол 3.
# 56:21 Посетитель номер 4 прибыл.
#       56:21 Посетитель номер 4 ожидает свободный стол.
# 56:22 Посетитель номер 5 прибыл.
#       56:22 Посетитель номер 5 ожидает свободный стол.
#             56:23 Посетитель номер 1 покушал и ушел.
#       56:23 Посетитель номер 4 сел за стол 1.
# 56:23 Посетитель номер 6 прибыл.
#       56:23 Посетитель номер 6 ожидает свободный стол.
#             56:24 Посетитель номер 2 покушал и ушел.
#       56:24 Посетитель номер 5 сел за стол 2.
# 56:24 Посетитель номер 7 прибыл.
#       56:24 Посетитель номер 7 ожидает свободный стол.
#             56:25 Посетитель номер 3 покушал и ушел.
#       56:25 Посетитель номер 6 сел за стол 3.
# 56:25 Посетитель номер 8 прибыл.
#       56:25 Посетитель номер 8 ожидает свободный стол.
# 56:26 Посетитель номер 9 прибыл.
#       56:26 Посетитель номер 9 ожидает свободный стол.
# 56:27 Посетитель номер 10 прибыл.
#       56:27 Посетитель номер 10 ожидает свободный стол.
#             56:28 Посетитель номер 4 покушал и ушел.
#       56:28 Посетитель номер 7 сел за стол 1.
# 56:28 Посетитель номер 11 прибыл.
#       56:28 Посетитель номер 11 ожидает свободный стол.
#             56:29 Посетитель номер 5 покушал и ушел.
#       56:29 Посетитель номер 8 сел за стол 2.
# 56:29 Посетитель номер 12 прибыл.
#       56:29 Посетитель номер 12 ожидает свободный стол.
#             56:30 Посетитель номер 6 покушал и ушел.
#       56:30 Посетитель номер 9 сел за стол 3.
# 56:30 Посетитель номер 13 прибыл.
#       56:30 Посетитель номер 13 ожидает свободный стол.
# 56:31 Посетитель номер 14 прибыл.
#       56:31 Посетитель номер 14 ожидает свободный стол.
# 56:32 Посетитель номер 15 прибыл.
#       56:32 Посетитель номер 15 ожидает свободный стол.
#             56:33 Посетитель номер 7 покушал и ушел.
#       56:33 Посетитель номер 10 сел за стол 1.
# 56:33 Посетитель номер 16 прибыл.
#       56:33 Посетитель номер 16 ожидает свободный стол.
#             56:34 Посетитель номер 8 покушал и ушел.
#       56:34 Посетитель номер 11 сел за стол 2.
# 56:34 Посетитель номер 17 прибыл.
#       56:34 Посетитель номер 17 ожидает свободный стол.
#             56:35 Посетитель номер 9 покушал и ушел.
#       56:35 Посетитель номер 12 сел за стол 3.
# 56:35 Посетитель номер 18 прибыл.
#       56:35 Посетитель номер 18 ожидает свободный стол.
# 56:36 Посетитель номер 19 прибыл.
#       56:36 Посетитель номер 19 ожидает свободный стол.
# 56:37 Посетитель номер 20 прибыл.
#       56:37 Посетитель номер 20 ожидает свободный стол.
#             56:38 Посетитель номер 10 покушал и ушел.
#       56:38 Посетитель номер 13 сел за стол 1.
#             56:39 Посетитель номер 11 покушал и ушел.
#       56:39 Посетитель номер 14 сел за стол 2.
#             56:40 Посетитель номер 12 покушал и ушел.
#       56:40 Посетитель номер 15 сел за стол 3.
#             56:43 Посетитель номер 13 покушал и ушел.
#       56:43 Посетитель номер 16 сел за стол 1.
#             56:44 Посетитель номер 14 покушал и ушел.
#       56:44 Посетитель номер 17 сел за стол 2.
#             56:45 Посетитель номер 15 покушал и ушел.
#       56:45 Посетитель номер 18 сел за стол 3.
#             56:48 Посетитель номер 16 покушал и ушел.
#       56:48 Посетитель номер 19 сел за стол 1.
#             56:49 Посетитель номер 17 покушал и ушел.
#       56:49 Посетитель номер 20 сел за стол 2.
#             56:50 Посетитель номер 18 покушал и ушел.
#             56:53 Посетитель номер 19 покушал и ушел.
#             56:54 Посетитель номер 20 покушал и ушел.
