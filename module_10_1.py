# Создание потоков
# Задача "Потоковая запись в файлы":
# Необходимо создать функцию write_words(word_count, file_name),
# где word_count - количество записываемых слов,
# file_name - название файла, куда будут записываться слова.
# Функция должна вести запись слов "Какое-то слово № <номер слова по порядку>"
# в соответствующий файл с прерыванием после записи каждого на 0.1 секунду.
# Сделать паузу можно при помощи функции sleep из модуля time,
# предварительно импортировав её: from time import sleep.
# В конце работы функции вывести строку "Завершилась запись в файл <название файла>".
# После создания файла вызовите 4 раза функцию write_words, передав в неё следующие значения:
# 10, example1.txt
# 30, example2.txt
# 200, example3.txt
# 100, example4.txt

from threading import Thread
import random
import time
from datetime import datetime


words = ['альбом', 'арена', 'адрес', 'аист', 'артикль', 'аптека', 'аномалия', 'академик', 'аромат', 'апельсин',
         'балкон', 'бегония', 'банан', 'балерина', 'бисер', 'бессмыслица', 'багажник', 'бурундук', 'бревно', 'буква',
         'выдача', 'ворона', 'волна', 'вулкан', 'вклад', 'вагон', 'вершина', 'волшебство', 'вопрос', 'вальс',
         'город', 'глазурь', 'горлышко', 'голова', 'гектар', 'граф', 'гудок', 'год', 'горец', 'глоток', 'дрова',
         'дозор', 'десерт', 'дефис', 'долгота', 'дело', 'дочь', 'дисконт', 'душа', 'дымка', 'дуб', 'ералаш', 'единица',
         'ежевика', 'еда', 'ерунда', 'ездок', 'енот', 'егоза', 'ель', 'ехидна', 'жонглёр', 'жетон', 'жажда', 'жилетка',
         'житель', 'жук', 'жилет', 'журнал', 'жест', 'железо', 'зима', 'загадка', 'закон', 'зефир', 'задание', 'забор',
         'земля', 'зритель', 'зал', 'занятие', 'июль', 'имбирь', 'изба', 'игра', 'ива', 'избыток', 'изъян', 'изюм',
         'идеал', 'известь', 'каравай', 'каскад', 'колодец', 'какао', 'копейка', 'короб', 'колено', 'колобок',
         'колокол', 'каша', 'линза', 'лампа', 'лекарь', 'лепет', 'люк', 'лицей', 'лес', 'лодка', 'льдина', 'лето',
         'музыка', 'малина', 'мебель', 'марка', 'мольба', 'маска', 'металл', 'мастер', 'мираж', 'мрак', 'набор',
         'никель', 'нрав', 'недра', 'номер', 'налог', 'наука', 'ночь', 'наряд', 'небо', 'овёс', 'озеро', 'опера',
         'огонь', 'основа', 'оратор', 'окунь', 'огород', 'отпад', 'оса', 'плов', 'приют', 'птица', 'палка', 'пакет',
         'пёс', 'пчела', 'прилив', 'палата', 'пекарь', 'рыба', 'размер', 'рак', 'ремонт', 'риф', 'режим', 'рост',
         'рукав', 'ручей', 'рысь', 'сарай', 'смола', 'статуя', 'свита', 'страус', 'свёкла', 'скула', 'стакан',
         'сугроб', 'стол', 'талант', 'турник', 'торг', 'турнир', 'тень', 'таз', 'томат', 'трон', 'тундра', 'точка',
         'уловка', 'уран', 'учёба', 'удав', 'ухаб', 'ураган', 'улика', 'участь', 'улочка', 'урожай', 'фланг', 'фурия',
         'флирт', 'формат', 'фиаско', 'фон', 'фауна', 'фанера', 'ферма', 'фонд', 'хаос', 'холст', 'хитрец', 'хвала',
         'хлопья', 'холод', 'хлопок', 'хлыст', 'хлеб', 'хомут', 'цветок', 'цитрус', 'цунами', 'цукат', 'циклоп',
         'цыган', 'цокот', 'цирк', 'цепь', 'цикл', 'чайка', 'чутьё', 'чтиво', 'чешуя', 'число', 'челнок', 'чай',
         'чугун', 'чашка', 'чудо', 'шлейф', 'шуруп', 'шанс', 'шампур', 'шкала', 'шрифт', 'ширина', 'штаб', 'шакал',
         'шар', 'щегол', 'щепка', 'щебет', 'щука', 'щель', 'щит', 'щи', 'щёлочь', 'щека', 'щебень', 'этаж', 'этюд',
         'эскимо', 'элита', 'эссе', 'этнос', 'эшелон', 'эпопея', 'эталон', 'эскиз', 'юность', 'юнга', 'юрта', 'юмор',
         'юг', 'юбилей', 'ювелир', 'юрист', 'юбка', 'юркость', 'яйцо', 'язык', 'яма', 'ящик', 'яблоко', 'ярлык',
         'ягода', 'яхта', 'якорь', 'ягуар']


def write_words(word_count, file_name):
    with open(file_name, mode='w+', encoding='utf-8') as fw:
        for word_count in range(word_count):
            file_content = f'Какое-то слово № {word_count + 1} "{random.sample(words, 1)[0]}" '
            time.sleep(0.1)
            fw.write(f'{file_content}\n')
        print(f'Завершилась запись в файл {file_name}')


time_start_wrw = datetime.now()

write_words(10, 'example1.txt')
write_words(30, 'example2.txt')
write_words(200, 'example3.txt')
write_words(100, 'example4.txt')
time_end_wrw = datetime.now()
duration_time_wrw = time_end_wrw - time_start_wrw
print(f'время затраченное на выполнение функций: {duration_time_wrw}')

# После вызовов функций создайте 4 потока
# для вызова этой функции со следующими аргументами для функции:
# 10, example5.txt
# 30, example6.txt
# 200, example7.txt
# 100, example8.txt

# Запустите эти потоки методом start не забыв,
# сделать остановку основного потока при помощи join.
# Также измерьте время затраченное на выполнение функций и потоков.
# Как это сделать рассказано в лекции к домашнему заданию.

time_start_flow = datetime.now()
flow_1 = Thread(target=write_words, args=(10, 'example5.txt'))
flow_2 = Thread(target=write_words, args=(30, 'example6.txt'))
flow_3 = Thread(target=write_words, args=(200, 'example7.txt'))
flow_4 = Thread(target=write_words, args=(100, 'example8.txt'))

flow_1.start()
flow_2.start()
flow_3.start()
flow_4.start()

flow_1.join()
flow_2.join()
flow_3.join()
flow_4.join()

time_end_flow = datetime.now()
duration_time_flow = time_end_flow - time_start_flow
print(f'время затраченное на выполнение потоков: {duration_time_flow}')

# макс. время выполнения в потоках не должно превышать ~20 секунд, а в функциях ~34 секунды.
# Вывод на консоль:
# Завершилась запись в файл example1.txt
# Завершилась запись в файл example2.txt
# Завершилась запись в файл example3.txt
# Завершилась запись в файл example4.txt
# время затраченное на выполнение функций: 0:00:34.149352
# Завершилась запись в файл example5.txt
# Завершилась запись в файл example6.txt
# Завершилась запись в файл example8.txt
# Завершилась запись в файл example7.txt
# время затраченное на выполнение потоков: 0:00:20.084786
